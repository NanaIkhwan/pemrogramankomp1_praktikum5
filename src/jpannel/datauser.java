/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package jpannel;

import Koneksi.koneksi;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author binta
 */
public class datauser extends javax.swing.JPanel {

    /**
     * Creates new form datauser
     */
    private JPanel main_panel;
    public datauser(JPanel main_panel) {
        this.main_panel = main_panel;
        initComponents();
        viewData();
        loaddata();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        content = new javax.swing.JPanel();
        data_user = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel_us = new javax.swing.JTable();
        bt_tambah = new javax.swing.JButton();
        bt_hapus = new javax.swing.JButton();
        btn_batal = new javax.swing.JButton();
        bt_cari = new javax.swing.JButton();
        txt_cari = new javax.swing.JTextField();
        input_data = new javax.swing.JPanel();
        txt_id = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_fullname = new javax.swing.JTextField();
        txt_password = new javax.swing.JTextField();
        txt_username = new javax.swing.JTextField();
        txt_level = new javax.swing.JTextField();
        bt_simpan = new javax.swing.JButton();
        bt_batal = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setLayout(new java.awt.CardLayout());

        content.setLayout(new java.awt.CardLayout());

        data_user.setBackground(new java.awt.Color(255, 255, 153));

        tabel_us.setBackground(new java.awt.Color(255, 255, 255));
        tabel_us.setForeground(new java.awt.Color(0, 0, 0));
        tabel_us.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "FULLNAME", "USERNAME", "PASSWORD", "LEVEL"
            }
        ));
        tabel_us.setGridColor(new java.awt.Color(0, 0, 0));
        tabel_us.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tabel_us.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_usMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel_us);

        bt_tambah.setBackground(new java.awt.Color(204, 204, 204));
        bt_tambah.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bt_tambah.setForeground(new java.awt.Color(0, 0, 0));
        bt_tambah.setText("TAMBAH");
        bt_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_tambahActionPerformed(evt);
            }
        });

        bt_hapus.setBackground(new java.awt.Color(204, 204, 204));
        bt_hapus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bt_hapus.setForeground(new java.awt.Color(0, 0, 0));
        bt_hapus.setText("HAPUS");
        bt_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_hapusActionPerformed(evt);
            }
        });

        btn_batal.setBackground(new java.awt.Color(204, 204, 204));
        btn_batal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_batal.setForeground(new java.awt.Color(0, 0, 0));
        btn_batal.setText("BATAL");
        btn_batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batalActionPerformed(evt);
            }
        });

        bt_cari.setBackground(new java.awt.Color(204, 204, 204));
        bt_cari.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bt_cari.setForeground(new java.awt.Color(0, 0, 0));
        bt_cari.setText("CARI");
        bt_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cariActionPerformed(evt);
            }
        });

        txt_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cariActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout data_userLayout = new javax.swing.GroupLayout(data_user);
        data_user.setLayout(data_userLayout);
        data_userLayout.setHorizontalGroup(
            data_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, data_userLayout.createSequentialGroup()
                .addGap(0, 34, Short.MAX_VALUE)
                .addGroup(data_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(data_userLayout.createSequentialGroup()
                        .addComponent(bt_tambah)
                        .addGap(10, 10, 10)
                        .addComponent(bt_hapus)
                        .addGap(10, 10, 10)
                        .addComponent(btn_batal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 221, Short.MAX_VALUE)
                        .addComponent(bt_cari)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 890, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        data_userLayout.setVerticalGroup(
            data_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data_userLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(data_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_tambah)
                    .addComponent(bt_hapus)
                    .addComponent(btn_batal)
                    .addComponent(bt_cari)
                    .addComponent(txt_cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        content.add(data_user, "card2");

        input_data.setBackground(new java.awt.Color(255, 255, 153));
        input_data.setForeground(new java.awt.Color(0, 0, 0));

        txt_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_idActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("ID USER :");

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("FULLNAME :");

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("USERNAME :");

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("PASSWORD");

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("LEVEL :");

        txt_fullname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_fullnameActionPerformed(evt);
            }
        });

        txt_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_passwordActionPerformed(evt);
            }
        });

        txt_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_usernameActionPerformed(evt);
            }
        });

        txt_level.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_levelActionPerformed(evt);
            }
        });

        bt_simpan.setText("SIMPAN");
        bt_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_simpanActionPerformed(evt);
            }
        });

        bt_batal.setText("BATAL");
        bt_batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_batalActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("TAMBAH DATA USER");

        javax.swing.GroupLayout input_dataLayout = new javax.swing.GroupLayout(input_data);
        input_data.setLayout(input_dataLayout);
        input_dataLayout.setHorizontalGroup(
            input_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(input_dataLayout.createSequentialGroup()
                .addGroup(input_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(input_dataLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_simpan)
                        .addGap(30, 30, 30)
                        .addComponent(bt_batal))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, input_dataLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(input_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(64, 64, 64)
                        .addGroup(input_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6)
                            .addComponent(txt_id, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
                            .addComponent(txt_fullname)
                            .addComponent(txt_username)
                            .addComponent(txt_password)
                            .addComponent(txt_level))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        input_dataLayout.setVerticalGroup(
            input_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(input_dataLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel6)
                .addGap(62, 62, 62)
                .addGroup(input_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(20, 20, 20)
                .addGroup(input_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txt_fullname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(input_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(input_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(input_dataLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel5))
                    .addGroup(input_dataLayout.createSequentialGroup()
                        .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_level, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(69, 69, 69)
                .addGroup(input_dataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_simpan)
                    .addComponent(bt_batal))
                .addContainerGap(138, Short.MAX_VALUE))
        );

        content.add(input_data, "card3");

        add(content, "card4");
    }// </editor-fold>//GEN-END:initComponents

    private void txt_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cariActionPerformed

    private void bt_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_tambahActionPerformed
        // TODO add your handling code here:
        content.removeAll();
        content.repaint();
        content.revalidate();
        
        content.add(input_data);
        content.repaint();
        content.revalidate();
    }//GEN-LAST:event_bt_tambahActionPerformed

    private void txt_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_idActionPerformed

    private void txt_fullnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_fullnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fullnameActionPerformed

    private void txt_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_passwordActionPerformed

    private void txt_usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_usernameActionPerformed

    private void txt_levelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_levelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_levelActionPerformed

    private void bt_batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_batalActionPerformed
        // TODO add your handling code here:
        content.removeAll();
        content.repaint();
        content.revalidate();
        
        viewData();
        content.add(data_user);
        content.repaint();
        content.revalidate();
    }//GEN-LAST:event_bt_batalActionPerformed

    private void bt_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_simpanActionPerformed
        // TODO add your handling code here:
        content.removeAll();
        content.repaint();
        content.revalidate();
        insertUserData();
        
        viewData();
        content.add(data_user);
        content.repaint();
        content.revalidate();
    }//GEN-LAST:event_bt_simpanActionPerformed

    private void tabel_usMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_usMouseClicked
        // TODO add your handling code here:
        if(bt_tambah.getText().equals("TAMBAH")){
          bt_tambah.setText("UBAH");
        }
        bt_hapus.setVisible(true);
        btn_batal.setVisible(true);
    }//GEN-LAST:event_tabel_usMouseClicked

    private void bt_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_hapusActionPerformed
        // TODO add your handling code here:
        hapusData();
    }//GEN-LAST:event_bt_hapusActionPerformed

    private void btn_batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batalActionPerformed
        // TODO add your handling code here:
        loaddata();
    }//GEN-LAST:event_btn_batalActionPerformed

    private void bt_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cariActionPerformed
        // TODO add your handling code here:
        pencarian();
    }//GEN-LAST:event_bt_cariActionPerformed

    private void viewData() {
    Connection k = null;
    Statement s = null;
    ResultSet r = null;
    try {
        DefaultTableModel m = (DefaultTableModel) tabel_us.getModel();
        String q = "SELECT * FROM user";
        
        k = koneksi.konek();
        s = k.createStatement();
        r = s.executeQuery(q);
        
        m.getDataVector().removeAllElements();
        
        while (r.next()) {
            String e = r.getString("id"); // Hapus spasi
            String a = r.getString("fullname");
            String b = r.getString("username");
            String c = r.getString("password");
            String d = r.getString("level");
            Object[] data = {e, a, b, c, d};
            m.addRow(data);
        }
    } catch (Exception e) {
        e.printStackTrace(); // Untuk debugging
    } finally {
        try {
            if (r != null) r.close();
            if (s != null) s.close();
            if (k != null) k.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
}

    
                public void insertUserData() {
        String a = txt_id.getText();
        String b = txt_fullname.getText();
        String c = txt_username.getText();
        String d = txt_password.getText();
        String e = txt_level.getText();

        String q = "INSERT INTO "
                + "user (id, fullname, username, password, level) "
                + "VALUES ('" + a + "','" + b + "','" + c + "','" + d + "','" + e + "')";
        Connection conn = koneksi.konek(); // Ganti nama variabel menjadi conn
        try {
            Statement s = conn.createStatement(); // Menggunakan conn
            int result = s.executeUpdate(q);
            if (result > 0) {
                // Jika simpan berhasil
                JOptionPane.showMessageDialog(this, "Data berhasil disimpan", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Jika simpan gagal
                JOptionPane.showMessageDialog(this, "Gagal menyimpan data", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) { // Ganti nama variabel menjadi ex
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan", "Error", JOptionPane.ERROR_MESSAGE);
        }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_batal;
    private javax.swing.JButton bt_cari;
    private javax.swing.JButton bt_hapus;
    private javax.swing.JButton bt_simpan;
    private javax.swing.JButton bt_tambah;
    private javax.swing.JButton btn_batal;
    private javax.swing.JPanel content;
    private javax.swing.JPanel data_user;
    private javax.swing.JPanel input_data;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabel_us;
    private javax.swing.JTextField txt_cari;
    private javax.swing.JTextField txt_fullname;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_level;
    private javax.swing.JTextField txt_password;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables

    private void loaddata() {
        
        bt_hapus.setVisible(false);
        btn_batal.setVisible(false);
        
      }
     private void hapusData() {
        int selectedRow = tabel_us.getSelectedRow();

        if (selectedRow != -1) {
            int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                String id_pen = tabel_us.getModel().getValueAt(selectedRow, 0).toString();
                String query = "DELETE FROM user WHERE id = '" + id_pen + "'";
                Connection c = koneksi.konek();
                
                viewData();
                loaddata();

                try {
                    Statement s = c.createStatement();
                    int result = s.executeUpdate(query);

                    if (result > 0) {
                        // Jika hapus berhasil
                        JOptionPane.showMessageDialog(this, "Data berhasil dihapus", "Sukses", JOptionPane.INFORMATION_MESSAGE);

                        // Refresh tabel
                        viewData();
                        loaddata();
                        
                    } else {
                        // Jika hapus gagal
                        JOptionPane.showMessageDialog(this, "Gagal menghapus data", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Terjadi kesalahan", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Pilih data yang akan dihapus", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }
      private void pencarian() {
        String kataKunci = txt_cari.getText().trim();

        // Memastikan bahwa kata kunci tidak kosong
        if (!kataKunci.isEmpty()) {
            try {
                DefaultTableModel model = (DefaultTableModel) tabel_us.getModel();
                Connection k = koneksi.konek();
                Statement s = k.createStatement();

                // Membersihkan tabel sebelum melakukan pencarian baru
                model.setRowCount(0);

                // Melakukan pencarian berdasarkan nama_kurir di dalam tabel
                String q = "SELECT * FROM user WHERE username LIKE '%" + kataKunci + "%'";
                ResultSet r = s.executeQuery(q);

                // Menambahkan hasil pencarian ke dalam model tabel
                while (r.next()) {
                    String e = r.getString("id"); // Hapus spasi
                    String a = r.getString("fullname");
                    String b = r.getString("username");
                    String c = r.getString("password");
                    String d = r.getString("level");
                    
                    Object[] data = {a, b, c, d, e};
                    model.addRow(data);
                }

                // Menutup koneksi dan statement
                r.close();
                s.close();
                k.close();
            } catch (Exception e) {
                // Handle exceptions appropriately (e.g., display an error message)
                e.printStackTrace();
            }
        } else {
            // Jika kata kunci kosong, refresh tabel untuk menampilkan semua data
            viewData();
        }
    }
}
